# Model arguments
model_name_or_path: Qwen/Qwen2.5-1.5B-Instruct
model_revision: main
torch_dtype: bfloat16
attn_implementation: flash_attention_2

# Data training arguments
dataset_name: assets/data.jsonl
problem_prefix: "You are a helpful coding assistant. You are given a problem description that you need to write a function in a language agonistic intermediate language (IR). The format is ```IR\n...\n```\n"
problem_surfix: "Now, Implement the intermediate language. Stop directly when the IR is generated. Generate only a single function, no main, no test.\n```IR\n"
# GRPO trainer config
bf16: true
use_vllm: false
do_eval: false
gradient_accumulation_steps: 4
gradient_checkpointing: true
gradient_checkpointing_kwargs:
  use_reentrant: false
hub_model_id: Qwen2.5-Coder-1.5B
hub_strategy: every_save
learning_rate: 2.0e-05
log_completions: true
log_level: info
logging_first_step: true
logging_steps: 1
logging_strategy: steps
lr_scheduler_type: cosine
max_prompt_length: 512
max_completion_length: 1024
max_steps: -1
num_generations: 16
num_train_epochs: 1
output_dir: data/Qwen2.5-Coder-1.5B
overwrite_output_dir: true
per_device_eval_batch_size: 16
per_device_train_batch_size: 16
push_to_hub: false
report_to:
- wandb
reward_funcs:
- code_exec
reward_weights:
- 1.0
save_strategy: "epoch"
save_total_limit: 1
seed: 42
warmup_ratio: 0.1
dataset_prompt_column: "problem"
vllm_guided_decoding_regex: "(.|\n)*?```"